name: "Static Analysis"

on: [push]

jobs:
  codeql:
    name: Analyze with CodeQL
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: apt-get install packages
      run: sudo apt-get update -qq &&
           sudo apt-get install --no-install-recommends -y
               bison
               build-essential
               flex
               git
               gperf
               libcurl4-openssl-dev
               libgtk-3-dev
               libhtml-parser-perl
               libjpeg-dev
               libpng-dev
               librsvg2-dev
               pkg-config

    - run: |
          export TARGET_WORKSPACE="$(pwd)/projects"
          source docs/env.sh
          ns-clone -n -s
          ns-make-tools install
          ns-make-libs install

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - run: |
          export TARGET_WORKSPACE="$(pwd)/projects"
          source docs/env.sh
          make -j"$(nproc)"

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  scan-build:
    name: Analyze with scan-build
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        language: ['cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: apt-get install packages
      run: sudo apt-get update -qq &&
           sudo apt-get install --no-install-recommends -y
               bison
               build-essential
               flex
               git
               gperf
               libcurl4-openssl-dev
               libgtk-3-dev
               libhtml-parser-perl
               libjpeg-dev
               libpng-dev
               librsvg2-dev
               pkg-config
               clang-tools

    - run: |
          export TARGET_WORKSPACE="$(pwd)/projects"
          source docs/env.sh
          ns-clone -n -s
          ns-make-tools install
          ns-make-libs install

    - name: scan-build
      run: |
          export TARGET_WORKSPACE="$(pwd)/projects"
          source docs/env.sh
          scan-build -sarif -o build/sarif make -j"$(nproc)"

    - name: upload scan-build
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: build/sarif
